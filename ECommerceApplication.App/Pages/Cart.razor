@page "/cart"
@using ECommerceApplication.App.Contracts
@using ECommerceApplication.App.ViewModels
<h3>My shopping cart</h3>


<section class="h-100 gradient-custom">
    <div class="container py-5">
        <div class="row d-flex justify-content-center my-4">
            <div class="col-md-8">
                <div class="card mb-4">
                    <div class="card-header py-3">
                        <h5 class="mb-0">Cart - @(ShoppingCart?.OrderItems?.Count ?? 0) items</h5>
                    </div>
                    <div class="card-body">
                        @foreach (var orderItem in ShoppingCart?.OrderItems ?? Enumerable.Empty<OrderItemViewModel>())
                        {
                            <!-- Single item -->
                            <div class="row">
                                <div class="col-lg-3 col-md-12 mb-4 mb-lg-0">
                                    <!-- Image -->
                                    <div class="bg-image hover-overlay hover-zoom ripple rounded" data-mdb-ripple-color="light">
                                        <img src="@orderItem.Product.ImageUrl"
                                             class="w-100" alt="Blue Jeans Jacket" />
                                        <a href="#!">
                                            <div class="mask" style="background-color: rgba(251, 251, 251, 0.2)"></div>
                                        </a>
                                    </div>
                                    <!-- Image -->
                                </div>

                                <div class="col-lg-5 col-md-6 mb-4 mb-lg-0">
                                    <!-- Data -->
                                    <p><strong>@orderItem.Product.ProductName</strong></p>
                                    <button type="button" class="btn btn-primary btn-sm me-1 mb-2" data-mdb-toggle="tooltip"
                                            title="Remove item" @onclick="() => RemoveItemFromCart(orderItem.OrderItemId)">
                                        <i class="fas fa-trash">RemoveItem</i>
                                    </button>
                                    <button type="button" class="btn btn-danger btn-sm mb-2" data-mdb-toggle="tooltip"
                                            title="Move to the wish list">
                                        <i class="fas fa-heart"></i>
                                    </button>
                                    <!-- Data -->
                                </div>

                                <div class="col-lg-4 col-md-6 mb-4 mb-lg-0">
                                    <!-- Quantity -->
                                    <div class="d-flex mb-4" style="max-width: 300px">
                                        <button class="btn btn-primary px-3 me-2"
                                                onclick="this.parentNode.querySelector('input[type=number]').stepDown()">
                                            <i class="fas fa-minus"></i>
                                            <span>-</span>
                                        </button>

                                        <div class="form-outline">
                                            <input id="form1" min="0" name="quantity" value="@orderItem.Quantity" type="number" class="form-control" />
                                            <label class="form-label" for="form1">Quantity</label>
                                        </div>

                                        <button class="btn btn-primary px-3 ms-2"
                                                onclick="this.parentNode.querySelector('input[type=number]').stepUp()">
                                            <i class="fas fa-plus"></i>
                                            <span>+</span>
                                        </button>
                                    </div>
                                    <!-- Quantity -->
                                    <!-- Price -->
                                    <p class="text-start text-md-center">
                                        <strong>@orderItem.PricePerUnit $</strong>
                                    </p>
                                    <!-- Price -->
                                </div>
                            </div>
                            <!-- Single item -->

                            <hr class="my-4" />
                        }

                        <!-- Single item -->
                        <!-- Single item -->
                    </div>
                </div>
                <div class="card mb-4">
                    <div class="card-body">
                        <p><strong>Expected shipping delivery</strong></p>
                        <p class="mb-0">12.10.2020 - 14.10.2020</p>
                    </div>
                </div>
                <div class="card mb-4 mb-lg-0">
                    <div class="card-body">
                        <p><strong>We accept</strong></p>
                        <img class="me-2" width="45px"
                             src="https://mdbcdn.b-cdn.net/wp-content/plugins/woocommerce-gateway-stripe/assets/images/visa.svg"
                             alt="Visa" />
                        <img class="me-2" width="45px"
                             src="https://mdbcdn.b-cdn.net/wp-content/plugins/woocommerce-gateway-stripe/assets/images/amex.svg"
                             alt="American Express" />
                        <img class="me-2" width="45px"
                             src="https://mdbcdn.b-cdn.net/wp-content/plugins/woocommerce-gateway-stripe/assets/images/mastercard.svg"
                             alt="Mastercard" />
                        <img class="me-2" width="45px"
                             src="https://mdbcdn.b-cdn.net/wp-content/plugins/woocommerce/includes/gateways/paypal/assets/images/paypal.webp"
                             alt="PayPal acceptance mark" />
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card mb-4">
                    <div class="card-header py-3">
                        <h5 class="mb-0">Summary</h5>
                    </div>
                    <div class="card-body">
                        <ul class="list-group list-group-flush">
                            @foreach (var orderItem in ShoppingCart?.OrderItems ?? Enumerable.Empty<OrderItemViewModel>())
                            {
                                <li class="list-group-item d-flex justify-content-between align-items-center border-0 px-0 pb-0">
                                    @orderItem.Product.ProductName
                                    <span>$@orderItem.CalculateTotal()</span>
                                </li>
                            }
                            <li class="list-group-item d-flex justify-content-between align-items-center px-0">
                                Shipping
                                <span>Calculated at the next step</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center border-0 px-0 mb-3">
                                <div>
                                    <strong>Total amount</strong>
                                    <strong>
                                        <p class="mb-0">(including VAT)</p>
                                    </strong>
                                </div>
                                <span><strong>$@ShoppingCart.Total</strong></span>
                            </li>
                        </ul>


                        <button type="button" class="btn btn-primary btn-lg btn-block" @onclick=NavigateToCreateOrder>
                                Go to checkout
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>


@code {
    [Inject]
    public NavigationManager NavigationManager { get; set; }
    [Inject]
    public ITokenService TokenService { get; set; }
    [Inject]
    public IShoppingCartDataService ShoppingCartDataService { get; set; }
    [Inject]
    public IOrderItemDataService OrderItemDataService { get; set; }
    [Inject]
    public IPhotoDataService PhotoDataService { get; set; }
    public Guid UserId;
    public ShoppingCartViewModel ShoppingCart;
}

@functions {
    protected override async Task OnInitializedAsync()
    {
        var token = await TokenService.GetTokenAsync();
        if (token != null)
        {
            Guid userId = await TokenService.DecodeUserIdFromTokenAsync(token);
            if (userId == null || userId == Guid.Empty)
                return;
            ShoppingCart = await ShoppingCartDataService.GetShoppingCartByUserIdAsync(userId);
        }
        foreach (var orderItem in ShoppingCart.OrderItems)
        {
            var photoResponse = await PhotoDataService.GetPhotoForOwnerAsync(orderItem.Product.ProductId);

            if (photoResponse.IsSuccess)
            {
                Console.WriteLine("S-a dat fetch");
                orderItem.Product.ImageUrl = $"data:image/png;base64,{photoResponse.Data[0].ImageData}";
            }
        }
    }

    protected async Task RemoveItemFromCart(Guid orderItemId)
    {
        try
        {
            await OrderItemDataService.RemoveItemFromCartAsync(orderItemId);
            ShoppingCart.OrderItems.RemoveAll(oa => oa.OrderItemId == orderItemId);
            StateHasChanged();
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            Console.WriteLine("Error while deleting the item");
        }
    }

    private void NavigateToCreateOrder()
    {
        NavigationManager.NavigateTo($"/cart/{ShoppingCart.ShoppingCartId}/createOrder");
    }
}
