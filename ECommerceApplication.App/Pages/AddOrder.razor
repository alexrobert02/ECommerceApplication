@page "/{shoppingCartId:guid}/createOrder"
@using ECommerceApplication.App.Contracts
@using ECommerceApplication.App.ViewModels
@using System.Text.Json
@inject IReviewDataService ReviewDataService

<meta name="viewport" content="width=device-width, initial-scale=1.0">
<div>

    <h3>AddOrder</h3>
    <EditForm Model="@AddressId" OnValidSubmit="@HandleAddToCart">
    <div class="row mb-3">
        <label for="productCategory" class="col-sm-3 form-label">Category Id:</label>
        <div class="col-sm-5">
            <InputSelect @bind-Value="@AddressId" class="form-select" id="productCategory" placeholder="select a category">
                <option value="">Select a category...</option>
                @foreach (var address in addresses)
                {
                    <option value="@address.AddressId">@address.City / @address.State</option>
                }
            </InputSelect>
        </div>
        <button type="button" 
                class="btn btn-primary btn-lg btn-block">
            Go to checkout
        </button>
    </div>
    </EditForm>
</div>



@code {
    [Inject]
    public NavigationManager NavigationManager { get; set; }
    [Inject]
    public ITokenService TokenService { get; set; }
    [Inject]
    public IShoppingCartDataService ShoppingCartDataService { get; set; }
    [Inject]
    public IOrderItemDataService OrderItemDataService { get; set; }
    [Inject]
    public IProductDataService ProductDataService { get; set; }
    [Inject]
    public IAddressDataService AddressDataService { get; set; }
    [Inject]
    public IOrderDataService orderDataService { get; set; }
    public List<ReviewViewModel> ProductReviews { get; set; }
    private bool reviewSubmitted = false;
    [Parameter]
    public Guid shoppingCartId { get; set; }


    public List<AddressViewModel> addresses { get; set; }
    public Guid AddressId { get; set; }
    [Parameter]
    public Guid shoppingCartId { get; set; }

    [Parameter]
    public Guid productId { get; set; }

    public string AddToCartMessage { get; set; }

    private OrderItemViewModel OrderItemViewModel { get; set; } = new OrderItemViewModel();

    private ProductViewModel Product { get; set; }
    private int userRating = 0;
    private string userReview = "";
    private Guid currentUserId;

}

@functions {
    protected override async Task OnInitializedAsync()
    {
        AddressId = Guid.Empty;
        addresses = await AddressDataService.GetAddressesAsync();
    }

    protected async Task HandleAddToCart()
    {
        orderDataService.Create(shoppingCartId, AddressId);
    }
}
