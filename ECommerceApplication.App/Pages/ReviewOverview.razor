@page "/reviewoverview"
@using ECommerceApplication.App.Contracts
@using ECommerceApplication.App.ViewModels

<h3>Review Overview</h3>
<br />

@if (Reviews == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="review-container">
        @foreach (var review in Reviews)
        {
            <div class="review" @onclick="() => NavigateToReviewDetail(review.ReviewId)">
                <p class="review-text">Review Text: @review.ReviewText</p>
                <p class="rating">Rating: @review.Rating</p>
                <button class="delete-review-button" @onclick="() => DeleteReview(review.ReviewId)">
                    Delete Review
                </button>
            </div>
        }
    </div>
}

@code {
    [Inject]
    public IReviewDataService ReviewDataService { get; set; }

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    public List<ReviewViewModel> Reviews { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Reviews = (await ReviewDataService.GetReviewAsync()).ToList();
    }

    private void NavigateToReviewDetail(Guid reviewId)
    {
        NavigationManager.NavigateTo($"/reviewdetail/{reviewId}");
    }

    private async Task DeleteReview(Guid reviewId)
    {
        await ReviewDataService.DeleteReviewAsync(reviewId);
        NavigationManager.NavigateTo("/reviewoverview");
    }
}
